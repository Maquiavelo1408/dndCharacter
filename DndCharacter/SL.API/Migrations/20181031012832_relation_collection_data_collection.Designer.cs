// <auto-generated />
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace SL.API.Migrations
{
    [DbContext(typeof(DndCharacterManagerContext))]
    [Migration("20181031012832_relation_collection_data_collection")]
    partial class relation_collection_data_collection
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Model.Entities.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_character")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCAligment")
                        .HasColumnName("id_c_aligment");

                    b.Property<int>("IdCClass")
                        .HasColumnName("id_c_class");

                    b.Property<string>("Level")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("character");
                });

            modelBuilder.Entity("DAL.Model.Entities.CharacterSpell", b =>
                {
                    b.Property<int>("IdCharacter")
                        .HasColumnName("id_character");

                    b.Property<int>("IdSpell")
                        .HasColumnName("id_spell");

                    b.HasKey("IdCharacter", "IdSpell");

                    b.ToTable("character_spell");
                });

            modelBuilder.Entity("DAL.Model.Entities.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_collection")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("collection");
                });

            modelBuilder.Entity("DAL.Model.Entities.DataCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_data_collection")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdCollection")
                        .HasColumnName("id_collection");

                    b.Property<string>("Value")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("IdCollection");

                    b.ToTable("data_collection");
                });

            modelBuilder.Entity("DAL.Model.Entities.Spell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_spell")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnName("description");

                    b.Property<int>("Level")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("spell");
                });

            modelBuilder.Entity("DAL.Model.Entities.SpellClass", b =>
                {
                    b.Property<int>("IdSpell")
                        .HasColumnName("id_spell");

                    b.Property<int>("IdCClass")
                        .HasColumnName("id_c_class");

                    b.HasKey("IdSpell", "IdCClass");

                    b.ToTable("spell_class");
                });

            modelBuilder.Entity("DAL.Model.Entities.DataCollection", b =>
                {
                    b.HasOne("DAL.Model.Entities.Collection", "Collection")
                        .WithMany("DataCollections")
                        .HasForeignKey("IdCollection")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
